#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AIRPORT")]
	public partial class AirPortDataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACCOUNT(ACCOUNT instance);
    partial void UpdateACCOUNT(ACCOUNT instance);
    partial void DeleteACCOUNT(ACCOUNT instance);
    partial void InsertVECHUYENBAY(VECHUYENBAY instance);
    partial void UpdateVECHUYENBAY(VECHUYENBAY instance);
    partial void DeleteVECHUYENBAY(VECHUYENBAY instance);
    partial void InsertCHUYENBAY(CHUYENBAY instance);
    partial void UpdateCHUYENBAY(CHUYENBAY instance);
    partial void DeleteCHUYENBAY(CHUYENBAY instance);
    partial void InsertCTCHUYENBAY(CTCHUYENBAY instance);
    partial void UpdateCTCHUYENBAY(CTCHUYENBAY instance);
    partial void DeleteCTCHUYENBAY(CTCHUYENBAY instance);
    partial void InsertCTDOANHTHUTHANG(CTDOANHTHUTHANG instance);
    partial void UpdateCTDOANHTHUTHANG(CTDOANHTHUTHANG instance);
    partial void DeleteCTDOANHTHUTHANG(CTDOANHTHUTHANG instance);
    partial void InsertDOANHTHUNAM(DOANHTHUNAM instance);
    partial void UpdateDOANHTHUNAM(DOANHTHUNAM instance);
    partial void DeleteDOANHTHUNAM(DOANHTHUNAM instance);
    partial void InsertDOANHTHUTHANG(DOANHTHUTHANG instance);
    partial void UpdateDOANHTHUTHANG(DOANHTHUTHANG instance);
    partial void DeleteDOANHTHUTHANG(DOANHTHUTHANG instance);
    partial void InsertDONGIA(DONGIA instance);
    partial void UpdateDONGIA(DONGIA instance);
    partial void DeleteDONGIA(DONGIA instance);
    partial void InsertHANGVE(HANGVE instance);
    partial void UpdateHANGVE(HANGVE instance);
    partial void DeleteHANGVE(HANGVE instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertMAYBAY(MAYBAY instance);
    partial void UpdateMAYBAY(MAYBAY instance);
    partial void DeleteMAYBAY(MAYBAY instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertSANBAY(SANBAY instance);
    partial void UpdateSANBAY(SANBAY instance);
    partial void DeleteSANBAY(SANBAY instance);
    partial void InsertTINHTRANGVE(TINHTRANGVE instance);
    partial void UpdateTINHTRANGVE(TINHTRANGVE instance);
    partial void DeleteTINHTRANGVE(TINHTRANGVE instance);
    partial void InsertTUYENBAY(TUYENBAY instance);
    partial void UpdateTUYENBAY(TUYENBAY instance);
    partial void DeleteTUYENBAY(TUYENBAY instance);
    #endregion
		
		public AirPortDataContextDataContext() : 
				base(global::DAL.Properties.Settings.Default.AIRPORTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AirPortDataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AirPortDataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AirPortDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AirPortDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACCOUNT> ACCOUNTs
		{
			get
			{
				return this.GetTable<ACCOUNT>();
			}
		}
		
		public System.Data.Linq.Table<VECHUYENBAY> VECHUYENBAYs
		{
			get
			{
				return this.GetTable<VECHUYENBAY>();
			}
		}
		
		public System.Data.Linq.Table<CHUYENBAY> CHUYENBAYs
		{
			get
			{
				return this.GetTable<CHUYENBAY>();
			}
		}
		
		public System.Data.Linq.Table<CTCHUYENBAY> CTCHUYENBAYs
		{
			get
			{
				return this.GetTable<CTCHUYENBAY>();
			}
		}
		
		public System.Data.Linq.Table<CTDOANHTHUTHANG> CTDOANHTHUTHANGs
		{
			get
			{
				return this.GetTable<CTDOANHTHUTHANG>();
			}
		}
		
		public System.Data.Linq.Table<DOANHTHUNAM> DOANHTHUNAMs
		{
			get
			{
				return this.GetTable<DOANHTHUNAM>();
			}
		}
		
		public System.Data.Linq.Table<DOANHTHUTHANG> DOANHTHUTHANGs
		{
			get
			{
				return this.GetTable<DOANHTHUTHANG>();
			}
		}
		
		public System.Data.Linq.Table<DONGIA> DONGIAs
		{
			get
			{
				return this.GetTable<DONGIA>();
			}
		}
		
		public System.Data.Linq.Table<HANGVE> HANGVEs
		{
			get
			{
				return this.GetTable<HANGVE>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<MAYBAY> MAYBAYs
		{
			get
			{
				return this.GetTable<MAYBAY>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<SANBAY> SANBAYs
		{
			get
			{
				return this.GetTable<SANBAY>();
			}
		}
		
		public System.Data.Linq.Table<THAMSO> THAMSOs
		{
			get
			{
				return this.GetTable<THAMSO>();
			}
		}
		
		public System.Data.Linq.Table<TINHTRANGVE> TINHTRANGVEs
		{
			get
			{
				return this.GetTable<TINHTRANGVE>();
			}
		}
		
		public System.Data.Linq.Table<TUYENBAY> TUYENBAYs
		{
			get
			{
				return this.GetTable<TUYENBAY>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT")]
	public partial class ACCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private string _MANHANVIEN;
		
		private int _TYPE;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnMANHANVIENChanging(string value);
    partial void OnMANHANVIENChanged();
    partial void OnTYPEChanging(int value);
    partial void OnTYPEChanged();
    #endregion
		
		public ACCOUNT()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="Int NOT NULL")]
		public int TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_ACCOUNT", Storage="_NHANVIEN", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.ACCOUNTs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.ACCOUNTs.Add(this);
						this._MANHANVIEN = value.MANHANVIEN;
					}
					else
					{
						this._MANHANVIEN = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VECHUYENBAY")]
	public partial class VECHUYENBAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAVE;
		
		private string _MAKHACHHANG;
		
		private string _MACHUYENBAY;
		
		private string _MAHANGVE;
		
		private decimal _GIATIEN;
		
		private string _MANHANVIEN;
		
		private System.Nullable<System.DateTime> _NGAYGIOGD;
		
		private string _LOAIVE;
		
		private string _VEGHE;
		
		private System.Nullable<int> _KYGUI;
		
		private EntityRef<CHUYENBAY> _CHUYENBAY;
		
		private EntityRef<HANGVE> _HANGVE;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAVEChanging(string value);
    partial void OnMAVEChanged();
    partial void OnMAKHACHHANGChanging(string value);
    partial void OnMAKHACHHANGChanged();
    partial void OnMACHUYENBAYChanging(string value);
    partial void OnMACHUYENBAYChanged();
    partial void OnMAHANGVEChanging(string value);
    partial void OnMAHANGVEChanged();
    partial void OnGIATIENChanging(decimal value);
    partial void OnGIATIENChanged();
    partial void OnMANHANVIENChanging(string value);
    partial void OnMANHANVIENChanged();
    partial void OnNGAYGIOGDChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIOGDChanged();
    partial void OnLOAIVEChanging(string value);
    partial void OnLOAIVEChanged();
    partial void OnVEGHEChanging(string value);
    partial void OnVEGHEChanged();
    partial void OnKYGUIChanging(System.Nullable<int> value);
    partial void OnKYGUIChanged();
    #endregion
		
		public VECHUYENBAY()
		{
			this._CHUYENBAY = default(EntityRef<CHUYENBAY>);
			this._HANGVE = default(EntityRef<HANGVE>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAVE", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAVE
		{
			get
			{
				return this._MAVE;
			}
			set
			{
				if ((this._MAVE != value))
				{
					this.OnMAVEChanging(value);
					this.SendPropertyChanging();
					this._MAVE = value;
					this.SendPropertyChanged("MAVE");
					this.OnMAVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHACHHANG", DbType="VarChar(10)")]
		public string MAKHACHHANG
		{
			get
			{
				return this._MAKHACHHANG;
			}
			set
			{
				if ((this._MAKHACHHANG != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHACHHANGChanging(value);
					this.SendPropertyChanging();
					this._MAKHACHHANG = value;
					this.SendPropertyChanged("MAKHACHHANG");
					this.OnMAKHACHHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUYENBAY", DbType="VarChar(10)")]
		public string MACHUYENBAY
		{
			get
			{
				return this._MACHUYENBAY;
			}
			set
			{
				if ((this._MACHUYENBAY != value))
				{
					if (this._CHUYENBAY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACHUYENBAYChanging(value);
					this.SendPropertyChanging();
					this._MACHUYENBAY = value;
					this.SendPropertyChanged("MACHUYENBAY");
					this.OnMACHUYENBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANGVE", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MAHANGVE
		{
			get
			{
				return this._MAHANGVE;
			}
			set
			{
				if ((this._MAHANGVE != value))
				{
					if (this._HANGVE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHANGVEChanging(value);
					this.SendPropertyChanging();
					this._MAHANGVE = value;
					this.SendPropertyChanged("MAHANGVE");
					this.OnMAHANGVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATIEN", DbType="Decimal(18,0) NOT NULL")]
		public decimal GIATIEN
		{
			get
			{
				return this._GIATIEN;
			}
			set
			{
				if ((this._GIATIEN != value))
				{
					this.OnGIATIENChanging(value);
					this.SendPropertyChanging();
					this._GIATIEN = value;
					this.SendPropertyChanged("GIATIEN");
					this.OnGIATIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", DbType="VarChar(10)")]
		public string MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIOGD", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIOGD
		{
			get
			{
				return this._NGAYGIOGD;
			}
			set
			{
				if ((this._NGAYGIOGD != value))
				{
					this.OnNGAYGIOGDChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIOGD = value;
					this.SendPropertyChanged("NGAYGIOGD");
					this.OnNGAYGIOGDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIVE", DbType="NVarChar(20)")]
		public string LOAIVE
		{
			get
			{
				return this._LOAIVE;
			}
			set
			{
				if ((this._LOAIVE != value))
				{
					this.OnLOAIVEChanging(value);
					this.SendPropertyChanging();
					this._LOAIVE = value;
					this.SendPropertyChanged("LOAIVE");
					this.OnLOAIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VEGHE", DbType="VarChar(100)")]
		public string VEGHE
		{
			get
			{
				return this._VEGHE;
			}
			set
			{
				if ((this._VEGHE != value))
				{
					this.OnVEGHEChanging(value);
					this.SendPropertyChanging();
					this._VEGHE = value;
					this.SendPropertyChanged("VEGHE");
					this.OnVEGHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KYGUI", DbType="Int")]
		public System.Nullable<int> KYGUI
		{
			get
			{
				return this._KYGUI;
			}
			set
			{
				if ((this._KYGUI != value))
				{
					this.OnKYGUIChanging(value);
					this.SendPropertyChanging();
					this._KYGUI = value;
					this.SendPropertyChanged("KYGUI");
					this.OnKYGUIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUYENBAY_VECHUYENBAY", Storage="_CHUYENBAY", ThisKey="MACHUYENBAY", OtherKey="MACHUYENBAY", IsForeignKey=true)]
		public CHUYENBAY CHUYENBAY
		{
			get
			{
				return this._CHUYENBAY.Entity;
			}
			set
			{
				CHUYENBAY previousValue = this._CHUYENBAY.Entity;
				if (((previousValue != value) 
							|| (this._CHUYENBAY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUYENBAY.Entity = null;
						previousValue.VECHUYENBAYs.Remove(this);
					}
					this._CHUYENBAY.Entity = value;
					if ((value != null))
					{
						value.VECHUYENBAYs.Add(this);
						this._MACHUYENBAY = value.MACHUYENBAY;
					}
					else
					{
						this._MACHUYENBAY = default(string);
					}
					this.SendPropertyChanged("CHUYENBAY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGVE_VECHUYENBAY", Storage="_HANGVE", ThisKey="MAHANGVE", OtherKey="MAHANGVE", IsForeignKey=true)]
		public HANGVE HANGVE
		{
			get
			{
				return this._HANGVE.Entity;
			}
			set
			{
				HANGVE previousValue = this._HANGVE.Entity;
				if (((previousValue != value) 
							|| (this._HANGVE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGVE.Entity = null;
						previousValue.VECHUYENBAYs.Remove(this);
					}
					this._HANGVE.Entity = value;
					if ((value != null))
					{
						value.VECHUYENBAYs.Add(this);
						this._MAHANGVE = value.MAHANGVE;
					}
					else
					{
						this._MAHANGVE = default(string);
					}
					this.SendPropertyChanged("HANGVE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_VECHUYENBAY", Storage="_KHACHHANG", ThisKey="MAKHACHHANG", OtherKey="MAKHACHHANG", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.VECHUYENBAYs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.VECHUYENBAYs.Add(this);
						this._MAKHACHHANG = value.MAKHACHHANG;
					}
					else
					{
						this._MAKHACHHANG = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_VECHUYENBAY", Storage="_NHANVIEN", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.VECHUYENBAYs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.VECHUYENBAYs.Add(this);
						this._MANHANVIEN = value.MANHANVIEN;
					}
					else
					{
						this._MANHANVIEN = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUYENBAY")]
	public partial class CHUYENBAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACHUYENBAY;
		
		private string _MATUYENBAY;
		
		private string _MAMAYBAY;
		
		private System.DateTime _THOIGIANKHOIHANH;
		
		private double _THOIGIANBAY;
		
		private EntitySet<VECHUYENBAY> _VECHUYENBAYs;
		
		private EntitySet<CTCHUYENBAY> _CTCHUYENBAYs;
		
		private EntitySet<CTDOANHTHUTHANG> _CTDOANHTHUTHANGs;
		
		private EntitySet<TINHTRANGVE> _TINHTRANGVEs;
		
		private EntityRef<MAYBAY> _MAYBAY;
		
		private EntityRef<TUYENBAY> _TUYENBAY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACHUYENBAYChanging(string value);
    partial void OnMACHUYENBAYChanged();
    partial void OnMATUYENBAYChanging(string value);
    partial void OnMATUYENBAYChanged();
    partial void OnMAMAYBAYChanging(string value);
    partial void OnMAMAYBAYChanged();
    partial void OnTHOIGIANKHOIHANHChanging(System.DateTime value);
    partial void OnTHOIGIANKHOIHANHChanged();
    partial void OnTHOIGIANBAYChanging(double value);
    partial void OnTHOIGIANBAYChanged();
    #endregion
		
		public CHUYENBAY()
		{
			this._VECHUYENBAYs = new EntitySet<VECHUYENBAY>(new Action<VECHUYENBAY>(this.attach_VECHUYENBAYs), new Action<VECHUYENBAY>(this.detach_VECHUYENBAYs));
			this._CTCHUYENBAYs = new EntitySet<CTCHUYENBAY>(new Action<CTCHUYENBAY>(this.attach_CTCHUYENBAYs), new Action<CTCHUYENBAY>(this.detach_CTCHUYENBAYs));
			this._CTDOANHTHUTHANGs = new EntitySet<CTDOANHTHUTHANG>(new Action<CTDOANHTHUTHANG>(this.attach_CTDOANHTHUTHANGs), new Action<CTDOANHTHUTHANG>(this.detach_CTDOANHTHUTHANGs));
			this._TINHTRANGVEs = new EntitySet<TINHTRANGVE>(new Action<TINHTRANGVE>(this.attach_TINHTRANGVEs), new Action<TINHTRANGVE>(this.detach_TINHTRANGVEs));
			this._MAYBAY = default(EntityRef<MAYBAY>);
			this._TUYENBAY = default(EntityRef<TUYENBAY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUYENBAY", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACHUYENBAY
		{
			get
			{
				return this._MACHUYENBAY;
			}
			set
			{
				if ((this._MACHUYENBAY != value))
				{
					this.OnMACHUYENBAYChanging(value);
					this.SendPropertyChanging();
					this._MACHUYENBAY = value;
					this.SendPropertyChanged("MACHUYENBAY");
					this.OnMACHUYENBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATUYENBAY", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MATUYENBAY
		{
			get
			{
				return this._MATUYENBAY;
			}
			set
			{
				if ((this._MATUYENBAY != value))
				{
					if (this._TUYENBAY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATUYENBAYChanging(value);
					this.SendPropertyChanging();
					this._MATUYENBAY = value;
					this.SendPropertyChanged("MATUYENBAY");
					this.OnMATUYENBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMAYBAY", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MAMAYBAY
		{
			get
			{
				return this._MAMAYBAY;
			}
			set
			{
				if ((this._MAMAYBAY != value))
				{
					if (this._MAYBAY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMAYBAYChanging(value);
					this.SendPropertyChanging();
					this._MAMAYBAY = value;
					this.SendPropertyChanged("MAMAYBAY");
					this.OnMAMAYBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANKHOIHANH", DbType="DateTime NOT NULL")]
		public System.DateTime THOIGIANKHOIHANH
		{
			get
			{
				return this._THOIGIANKHOIHANH;
			}
			set
			{
				if ((this._THOIGIANKHOIHANH != value))
				{
					this.OnTHOIGIANKHOIHANHChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANKHOIHANH = value;
					this.SendPropertyChanged("THOIGIANKHOIHANH");
					this.OnTHOIGIANKHOIHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANBAY", DbType="Float NOT NULL")]
		public double THOIGIANBAY
		{
			get
			{
				return this._THOIGIANBAY;
			}
			set
			{
				if ((this._THOIGIANBAY != value))
				{
					this.OnTHOIGIANBAYChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANBAY = value;
					this.SendPropertyChanged("THOIGIANBAY");
					this.OnTHOIGIANBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUYENBAY_VECHUYENBAY", Storage="_VECHUYENBAYs", ThisKey="MACHUYENBAY", OtherKey="MACHUYENBAY")]
		public EntitySet<VECHUYENBAY> VECHUYENBAYs
		{
			get
			{
				return this._VECHUYENBAYs;
			}
			set
			{
				this._VECHUYENBAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUYENBAY_CTCHUYENBAY", Storage="_CTCHUYENBAYs", ThisKey="MACHUYENBAY", OtherKey="MACHUYENBAY")]
		public EntitySet<CTCHUYENBAY> CTCHUYENBAYs
		{
			get
			{
				return this._CTCHUYENBAYs;
			}
			set
			{
				this._CTCHUYENBAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUYENBAY_CTDOANHTHUTHANG", Storage="_CTDOANHTHUTHANGs", ThisKey="MACHUYENBAY", OtherKey="MACHUYENBAY")]
		public EntitySet<CTDOANHTHUTHANG> CTDOANHTHUTHANGs
		{
			get
			{
				return this._CTDOANHTHUTHANGs;
			}
			set
			{
				this._CTDOANHTHUTHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUYENBAY_TINHTRANGVE", Storage="_TINHTRANGVEs", ThisKey="MACHUYENBAY", OtherKey="MACHUYENBAY")]
		public EntitySet<TINHTRANGVE> TINHTRANGVEs
		{
			get
			{
				return this._TINHTRANGVEs;
			}
			set
			{
				this._TINHTRANGVEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAYBAY_CHUYENBAY", Storage="_MAYBAY", ThisKey="MAMAYBAY", OtherKey="MAMAYBAY", IsForeignKey=true)]
		public MAYBAY MAYBAY
		{
			get
			{
				return this._MAYBAY.Entity;
			}
			set
			{
				MAYBAY previousValue = this._MAYBAY.Entity;
				if (((previousValue != value) 
							|| (this._MAYBAY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAYBAY.Entity = null;
						previousValue.CHUYENBAYs.Remove(this);
					}
					this._MAYBAY.Entity = value;
					if ((value != null))
					{
						value.CHUYENBAYs.Add(this);
						this._MAMAYBAY = value.MAMAYBAY;
					}
					else
					{
						this._MAMAYBAY = default(string);
					}
					this.SendPropertyChanged("MAYBAY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TUYENBAY_CHUYENBAY", Storage="_TUYENBAY", ThisKey="MATUYENBAY", OtherKey="MATUYENBAY", IsForeignKey=true)]
		public TUYENBAY TUYENBAY
		{
			get
			{
				return this._TUYENBAY.Entity;
			}
			set
			{
				TUYENBAY previousValue = this._TUYENBAY.Entity;
				if (((previousValue != value) 
							|| (this._TUYENBAY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TUYENBAY.Entity = null;
						previousValue.CHUYENBAYs.Remove(this);
					}
					this._TUYENBAY.Entity = value;
					if ((value != null))
					{
						value.CHUYENBAYs.Add(this);
						this._MATUYENBAY = value.MATUYENBAY;
					}
					else
					{
						this._MATUYENBAY = default(string);
					}
					this.SendPropertyChanged("TUYENBAY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VECHUYENBAYs(VECHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.CHUYENBAY = this;
		}
		
		private void detach_VECHUYENBAYs(VECHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.CHUYENBAY = null;
		}
		
		private void attach_CTCHUYENBAYs(CTCHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.CHUYENBAY = this;
		}
		
		private void detach_CTCHUYENBAYs(CTCHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.CHUYENBAY = null;
		}
		
		private void attach_CTDOANHTHUTHANGs(CTDOANHTHUTHANG entity)
		{
			this.SendPropertyChanging();
			entity.CHUYENBAY = this;
		}
		
		private void detach_CTDOANHTHUTHANGs(CTDOANHTHUTHANG entity)
		{
			this.SendPropertyChanging();
			entity.CHUYENBAY = null;
		}
		
		private void attach_TINHTRANGVEs(TINHTRANGVE entity)
		{
			this.SendPropertyChanging();
			entity.CHUYENBAY = this;
		}
		
		private void detach_TINHTRANGVEs(TINHTRANGVE entity)
		{
			this.SendPropertyChanging();
			entity.CHUYENBAY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTCHUYENBAY")]
	public partial class CTCHUYENBAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACHUYENBAY;
		
		private string _MASANBAYTG;
		
		private double _THOIGIANDUNG;
		
		private string _GHICHU;
		
		private EntityRef<CHUYENBAY> _CHUYENBAY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACHUYENBAYChanging(string value);
    partial void OnMACHUYENBAYChanged();
    partial void OnMASANBAYTGChanging(string value);
    partial void OnMASANBAYTGChanged();
    partial void OnTHOIGIANDUNGChanging(double value);
    partial void OnTHOIGIANDUNGChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    #endregion
		
		public CTCHUYENBAY()
		{
			this._CHUYENBAY = default(EntityRef<CHUYENBAY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUYENBAY", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACHUYENBAY
		{
			get
			{
				return this._MACHUYENBAY;
			}
			set
			{
				if ((this._MACHUYENBAY != value))
				{
					if (this._CHUYENBAY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACHUYENBAYChanging(value);
					this.SendPropertyChanging();
					this._MACHUYENBAY = value;
					this.SendPropertyChanged("MACHUYENBAY");
					this.OnMACHUYENBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASANBAYTG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASANBAYTG
		{
			get
			{
				return this._MASANBAYTG;
			}
			set
			{
				if ((this._MASANBAYTG != value))
				{
					this.OnMASANBAYTGChanging(value);
					this.SendPropertyChanging();
					this._MASANBAYTG = value;
					this.SendPropertyChanged("MASANBAYTG");
					this.OnMASANBAYTGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANDUNG", DbType="Float NOT NULL")]
		public double THOIGIANDUNG
		{
			get
			{
				return this._THOIGIANDUNG;
			}
			set
			{
				if ((this._THOIGIANDUNG != value))
				{
					this.OnTHOIGIANDUNGChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANDUNG = value;
					this.SendPropertyChanged("THOIGIANDUNG");
					this.OnTHOIGIANDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(100)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUYENBAY_CTCHUYENBAY", Storage="_CHUYENBAY", ThisKey="MACHUYENBAY", OtherKey="MACHUYENBAY", IsForeignKey=true)]
		public CHUYENBAY CHUYENBAY
		{
			get
			{
				return this._CHUYENBAY.Entity;
			}
			set
			{
				CHUYENBAY previousValue = this._CHUYENBAY.Entity;
				if (((previousValue != value) 
							|| (this._CHUYENBAY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUYENBAY.Entity = null;
						previousValue.CTCHUYENBAYs.Remove(this);
					}
					this._CHUYENBAY.Entity = value;
					if ((value != null))
					{
						value.CTCHUYENBAYs.Add(this);
						this._MACHUYENBAY = value.MACHUYENBAY;
					}
					else
					{
						this._MACHUYENBAY = default(string);
					}
					this.SendPropertyChanged("CHUYENBAY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDOANHTHUTHANG")]
	public partial class CTDOANHTHUTHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _THANG;
		
		private string _NAM;
		
		private string _MACHUYENBAY;
		
		private int _SOVEBANDUOC;
		
		private decimal _DOANHTHU;
		
		private EntityRef<CHUYENBAY> _CHUYENBAY;
		
		private EntityRef<DOANHTHUTHANG> _DOANHTHUTHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTHANGChanging(string value);
    partial void OnTHANGChanged();
    partial void OnNAMChanging(string value);
    partial void OnNAMChanged();
    partial void OnMACHUYENBAYChanging(string value);
    partial void OnMACHUYENBAYChanged();
    partial void OnSOVEBANDUOCChanging(int value);
    partial void OnSOVEBANDUOCChanged();
    partial void OnDOANHTHUChanging(decimal value);
    partial void OnDOANHTHUChanged();
    #endregion
		
		public CTDOANHTHUTHANG()
		{
			this._CHUYENBAY = default(EntityRef<CHUYENBAY>);
			this._DOANHTHUTHANG = default(EntityRef<DOANHTHUTHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANG", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string THANG
		{
			get
			{
				return this._THANG;
			}
			set
			{
				if ((this._THANG != value))
				{
					if (this._DOANHTHUTHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTHANGChanging(value);
					this.SendPropertyChanging();
					this._THANG = value;
					this.SendPropertyChanged("THANG");
					this.OnTHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAM", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NAM
		{
			get
			{
				return this._NAM;
			}
			set
			{
				if ((this._NAM != value))
				{
					if (this._DOANHTHUTHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNAMChanging(value);
					this.SendPropertyChanging();
					this._NAM = value;
					this.SendPropertyChanged("NAM");
					this.OnNAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUYENBAY", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACHUYENBAY
		{
			get
			{
				return this._MACHUYENBAY;
			}
			set
			{
				if ((this._MACHUYENBAY != value))
				{
					if (this._CHUYENBAY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACHUYENBAYChanging(value);
					this.SendPropertyChanging();
					this._MACHUYENBAY = value;
					this.SendPropertyChanged("MACHUYENBAY");
					this.OnMACHUYENBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOVEBANDUOC", DbType="Int NOT NULL")]
		public int SOVEBANDUOC
		{
			get
			{
				return this._SOVEBANDUOC;
			}
			set
			{
				if ((this._SOVEBANDUOC != value))
				{
					this.OnSOVEBANDUOCChanging(value);
					this.SendPropertyChanging();
					this._SOVEBANDUOC = value;
					this.SendPropertyChanged("SOVEBANDUOC");
					this.OnSOVEBANDUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOANHTHU", DbType="Decimal(18,0) NOT NULL")]
		public decimal DOANHTHU
		{
			get
			{
				return this._DOANHTHU;
			}
			set
			{
				if ((this._DOANHTHU != value))
				{
					this.OnDOANHTHUChanging(value);
					this.SendPropertyChanging();
					this._DOANHTHU = value;
					this.SendPropertyChanged("DOANHTHU");
					this.OnDOANHTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUYENBAY_CTDOANHTHUTHANG", Storage="_CHUYENBAY", ThisKey="MACHUYENBAY", OtherKey="MACHUYENBAY", IsForeignKey=true)]
		public CHUYENBAY CHUYENBAY
		{
			get
			{
				return this._CHUYENBAY.Entity;
			}
			set
			{
				CHUYENBAY previousValue = this._CHUYENBAY.Entity;
				if (((previousValue != value) 
							|| (this._CHUYENBAY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUYENBAY.Entity = null;
						previousValue.CTDOANHTHUTHANGs.Remove(this);
					}
					this._CHUYENBAY.Entity = value;
					if ((value != null))
					{
						value.CTDOANHTHUTHANGs.Add(this);
						this._MACHUYENBAY = value.MACHUYENBAY;
					}
					else
					{
						this._MACHUYENBAY = default(string);
					}
					this.SendPropertyChanged("CHUYENBAY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOANHTHUTHANG_CTDOANHTHUTHANG", Storage="_DOANHTHUTHANG", ThisKey="THANG,NAM", OtherKey="THANG,NAM", IsForeignKey=true)]
		public DOANHTHUTHANG DOANHTHUTHANG
		{
			get
			{
				return this._DOANHTHUTHANG.Entity;
			}
			set
			{
				DOANHTHUTHANG previousValue = this._DOANHTHUTHANG.Entity;
				if (((previousValue != value) 
							|| (this._DOANHTHUTHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOANHTHUTHANG.Entity = null;
						previousValue.CTDOANHTHUTHANGs.Remove(this);
					}
					this._DOANHTHUTHANG.Entity = value;
					if ((value != null))
					{
						value.CTDOANHTHUTHANGs.Add(this);
						this._THANG = value.THANG;
						this._NAM = value.NAM;
					}
					else
					{
						this._THANG = default(string);
						this._NAM = default(string);
					}
					this.SendPropertyChanged("DOANHTHUTHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOANHTHUNAM")]
	public partial class DOANHTHUNAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NAM;
		
		private decimal _DOANHTHU;
		
		private EntitySet<DOANHTHUTHANG> _DOANHTHUTHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNAMChanging(string value);
    partial void OnNAMChanged();
    partial void OnDOANHTHUChanging(decimal value);
    partial void OnDOANHTHUChanged();
    #endregion
		
		public DOANHTHUNAM()
		{
			this._DOANHTHUTHANGs = new EntitySet<DOANHTHUTHANG>(new Action<DOANHTHUTHANG>(this.attach_DOANHTHUTHANGs), new Action<DOANHTHUTHANG>(this.detach_DOANHTHUTHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAM", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NAM
		{
			get
			{
				return this._NAM;
			}
			set
			{
				if ((this._NAM != value))
				{
					this.OnNAMChanging(value);
					this.SendPropertyChanging();
					this._NAM = value;
					this.SendPropertyChanged("NAM");
					this.OnNAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOANHTHU", DbType="Decimal(18,0) NOT NULL")]
		public decimal DOANHTHU
		{
			get
			{
				return this._DOANHTHU;
			}
			set
			{
				if ((this._DOANHTHU != value))
				{
					this.OnDOANHTHUChanging(value);
					this.SendPropertyChanging();
					this._DOANHTHU = value;
					this.SendPropertyChanged("DOANHTHU");
					this.OnDOANHTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOANHTHUNAM_DOANHTHUTHANG", Storage="_DOANHTHUTHANGs", ThisKey="NAM", OtherKey="NAM")]
		public EntitySet<DOANHTHUTHANG> DOANHTHUTHANGs
		{
			get
			{
				return this._DOANHTHUTHANGs;
			}
			set
			{
				this._DOANHTHUTHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DOANHTHUTHANGs(DOANHTHUTHANG entity)
		{
			this.SendPropertyChanging();
			entity.DOANHTHUNAM = this;
		}
		
		private void detach_DOANHTHUTHANGs(DOANHTHUTHANG entity)
		{
			this.SendPropertyChanging();
			entity.DOANHTHUNAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOANHTHUTHANG")]
	public partial class DOANHTHUTHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _THANG;
		
		private string _NAM;
		
		private int _SOCHUYENBAY;
		
		private decimal _DOANHTHU;
		
		private EntitySet<CTDOANHTHUTHANG> _CTDOANHTHUTHANGs;
		
		private EntityRef<DOANHTHUNAM> _DOANHTHUNAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTHANGChanging(string value);
    partial void OnTHANGChanged();
    partial void OnNAMChanging(string value);
    partial void OnNAMChanged();
    partial void OnSOCHUYENBAYChanging(int value);
    partial void OnSOCHUYENBAYChanged();
    partial void OnDOANHTHUChanging(decimal value);
    partial void OnDOANHTHUChanged();
    #endregion
		
		public DOANHTHUTHANG()
		{
			this._CTDOANHTHUTHANGs = new EntitySet<CTDOANHTHUTHANG>(new Action<CTDOANHTHUTHANG>(this.attach_CTDOANHTHUTHANGs), new Action<CTDOANHTHUTHANG>(this.detach_CTDOANHTHUTHANGs));
			this._DOANHTHUNAM = default(EntityRef<DOANHTHUNAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANG", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string THANG
		{
			get
			{
				return this._THANG;
			}
			set
			{
				if ((this._THANG != value))
				{
					this.OnTHANGChanging(value);
					this.SendPropertyChanging();
					this._THANG = value;
					this.SendPropertyChanged("THANG");
					this.OnTHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAM", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NAM
		{
			get
			{
				return this._NAM;
			}
			set
			{
				if ((this._NAM != value))
				{
					if (this._DOANHTHUNAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNAMChanging(value);
					this.SendPropertyChanging();
					this._NAM = value;
					this.SendPropertyChanged("NAM");
					this.OnNAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOCHUYENBAY", DbType="Int NOT NULL")]
		public int SOCHUYENBAY
		{
			get
			{
				return this._SOCHUYENBAY;
			}
			set
			{
				if ((this._SOCHUYENBAY != value))
				{
					this.OnSOCHUYENBAYChanging(value);
					this.SendPropertyChanging();
					this._SOCHUYENBAY = value;
					this.SendPropertyChanged("SOCHUYENBAY");
					this.OnSOCHUYENBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOANHTHU", DbType="Decimal(18,0) NOT NULL")]
		public decimal DOANHTHU
		{
			get
			{
				return this._DOANHTHU;
			}
			set
			{
				if ((this._DOANHTHU != value))
				{
					this.OnDOANHTHUChanging(value);
					this.SendPropertyChanging();
					this._DOANHTHU = value;
					this.SendPropertyChanged("DOANHTHU");
					this.OnDOANHTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOANHTHUTHANG_CTDOANHTHUTHANG", Storage="_CTDOANHTHUTHANGs", ThisKey="THANG,NAM", OtherKey="THANG,NAM")]
		public EntitySet<CTDOANHTHUTHANG> CTDOANHTHUTHANGs
		{
			get
			{
				return this._CTDOANHTHUTHANGs;
			}
			set
			{
				this._CTDOANHTHUTHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOANHTHUNAM_DOANHTHUTHANG", Storage="_DOANHTHUNAM", ThisKey="NAM", OtherKey="NAM", IsForeignKey=true)]
		public DOANHTHUNAM DOANHTHUNAM
		{
			get
			{
				return this._DOANHTHUNAM.Entity;
			}
			set
			{
				DOANHTHUNAM previousValue = this._DOANHTHUNAM.Entity;
				if (((previousValue != value) 
							|| (this._DOANHTHUNAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOANHTHUNAM.Entity = null;
						previousValue.DOANHTHUTHANGs.Remove(this);
					}
					this._DOANHTHUNAM.Entity = value;
					if ((value != null))
					{
						value.DOANHTHUTHANGs.Add(this);
						this._NAM = value.NAM;
					}
					else
					{
						this._NAM = default(string);
					}
					this.SendPropertyChanged("DOANHTHUNAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDOANHTHUTHANGs(CTDOANHTHUTHANG entity)
		{
			this.SendPropertyChanging();
			entity.DOANHTHUTHANG = this;
		}
		
		private void detach_CTDOANHTHUTHANGs(CTDOANHTHUTHANG entity)
		{
			this.SendPropertyChanging();
			entity.DOANHTHUTHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONGIA")]
	public partial class DONGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATUYENBAY;
		
		private string _MAHANGVE;
		
		private decimal _DONGIA1;
		
		private EntityRef<HANGVE> _HANGVE;
		
		private EntityRef<TUYENBAY> _TUYENBAY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATUYENBAYChanging(string value);
    partial void OnMATUYENBAYChanged();
    partial void OnMAHANGVEChanging(string value);
    partial void OnMAHANGVEChanged();
    partial void OnDONGIA1Changing(decimal value);
    partial void OnDONGIA1Changed();
    #endregion
		
		public DONGIA()
		{
			this._HANGVE = default(EntityRef<HANGVE>);
			this._TUYENBAY = default(EntityRef<TUYENBAY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATUYENBAY", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATUYENBAY
		{
			get
			{
				return this._MATUYENBAY;
			}
			set
			{
				if ((this._MATUYENBAY != value))
				{
					if (this._TUYENBAY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATUYENBAYChanging(value);
					this.SendPropertyChanging();
					this._MATUYENBAY = value;
					this.SendPropertyChanged("MATUYENBAY");
					this.OnMATUYENBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANGVE", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHANGVE
		{
			get
			{
				return this._MAHANGVE;
			}
			set
			{
				if ((this._MAHANGVE != value))
				{
					if (this._HANGVE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHANGVEChanging(value);
					this.SendPropertyChanging();
					this._MAHANGVE = value;
					this.SendPropertyChanged("MAHANGVE");
					this.OnMAHANGVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DONGIA", Storage="_DONGIA1", DbType="Decimal(18,0) NOT NULL")]
		public decimal DONGIA1
		{
			get
			{
				return this._DONGIA1;
			}
			set
			{
				if ((this._DONGIA1 != value))
				{
					this.OnDONGIA1Changing(value);
					this.SendPropertyChanging();
					this._DONGIA1 = value;
					this.SendPropertyChanged("DONGIA1");
					this.OnDONGIA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGVE_DONGIA", Storage="_HANGVE", ThisKey="MAHANGVE", OtherKey="MAHANGVE", IsForeignKey=true)]
		public HANGVE HANGVE
		{
			get
			{
				return this._HANGVE.Entity;
			}
			set
			{
				HANGVE previousValue = this._HANGVE.Entity;
				if (((previousValue != value) 
							|| (this._HANGVE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGVE.Entity = null;
						previousValue.DONGIAs.Remove(this);
					}
					this._HANGVE.Entity = value;
					if ((value != null))
					{
						value.DONGIAs.Add(this);
						this._MAHANGVE = value.MAHANGVE;
					}
					else
					{
						this._MAHANGVE = default(string);
					}
					this.SendPropertyChanged("HANGVE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TUYENBAY_DONGIA", Storage="_TUYENBAY", ThisKey="MATUYENBAY", OtherKey="MATUYENBAY", IsForeignKey=true)]
		public TUYENBAY TUYENBAY
		{
			get
			{
				return this._TUYENBAY.Entity;
			}
			set
			{
				TUYENBAY previousValue = this._TUYENBAY.Entity;
				if (((previousValue != value) 
							|| (this._TUYENBAY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TUYENBAY.Entity = null;
						previousValue.DONGIAs.Remove(this);
					}
					this._TUYENBAY.Entity = value;
					if ((value != null))
					{
						value.DONGIAs.Add(this);
						this._MATUYENBAY = value.MATUYENBAY;
					}
					else
					{
						this._MATUYENBAY = default(string);
					}
					this.SendPropertyChanged("TUYENBAY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANGVE")]
	public partial class HANGVE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHANGVE;
		
		private string _TENHANGVE;
		
		private EntitySet<VECHUYENBAY> _VECHUYENBAYs;
		
		private EntitySet<DONGIA> _DONGIAs;
		
		private EntitySet<TINHTRANGVE> _TINHTRANGVEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHANGVEChanging(string value);
    partial void OnMAHANGVEChanged();
    partial void OnTENHANGVEChanging(string value);
    partial void OnTENHANGVEChanged();
    #endregion
		
		public HANGVE()
		{
			this._VECHUYENBAYs = new EntitySet<VECHUYENBAY>(new Action<VECHUYENBAY>(this.attach_VECHUYENBAYs), new Action<VECHUYENBAY>(this.detach_VECHUYENBAYs));
			this._DONGIAs = new EntitySet<DONGIA>(new Action<DONGIA>(this.attach_DONGIAs), new Action<DONGIA>(this.detach_DONGIAs));
			this._TINHTRANGVEs = new EntitySet<TINHTRANGVE>(new Action<TINHTRANGVE>(this.attach_TINHTRANGVEs), new Action<TINHTRANGVE>(this.detach_TINHTRANGVEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANGVE", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHANGVE
		{
			get
			{
				return this._MAHANGVE;
			}
			set
			{
				if ((this._MAHANGVE != value))
				{
					this.OnMAHANGVEChanging(value);
					this.SendPropertyChanging();
					this._MAHANGVE = value;
					this.SendPropertyChanged("MAHANGVE");
					this.OnMAHANGVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHANGVE", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TENHANGVE
		{
			get
			{
				return this._TENHANGVE;
			}
			set
			{
				if ((this._TENHANGVE != value))
				{
					this.OnTENHANGVEChanging(value);
					this.SendPropertyChanging();
					this._TENHANGVE = value;
					this.SendPropertyChanged("TENHANGVE");
					this.OnTENHANGVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGVE_VECHUYENBAY", Storage="_VECHUYENBAYs", ThisKey="MAHANGVE", OtherKey="MAHANGVE")]
		public EntitySet<VECHUYENBAY> VECHUYENBAYs
		{
			get
			{
				return this._VECHUYENBAYs;
			}
			set
			{
				this._VECHUYENBAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGVE_DONGIA", Storage="_DONGIAs", ThisKey="MAHANGVE", OtherKey="MAHANGVE")]
		public EntitySet<DONGIA> DONGIAs
		{
			get
			{
				return this._DONGIAs;
			}
			set
			{
				this._DONGIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGVE_TINHTRANGVE", Storage="_TINHTRANGVEs", ThisKey="MAHANGVE", OtherKey="MAHANGVE")]
		public EntitySet<TINHTRANGVE> TINHTRANGVEs
		{
			get
			{
				return this._TINHTRANGVEs;
			}
			set
			{
				this._TINHTRANGVEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VECHUYENBAYs(VECHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.HANGVE = this;
		}
		
		private void detach_VECHUYENBAYs(VECHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.HANGVE = null;
		}
		
		private void attach_DONGIAs(DONGIA entity)
		{
			this.SendPropertyChanging();
			entity.HANGVE = this;
		}
		
		private void detach_DONGIAs(DONGIA entity)
		{
			this.SendPropertyChanging();
			entity.HANGVE = null;
		}
		
		private void attach_TINHTRANGVEs(TINHTRANGVE entity)
		{
			this.SendPropertyChanging();
			entity.HANGVE = this;
		}
		
		private void detach_TINHTRANGVEs(TINHTRANGVE entity)
		{
			this.SendPropertyChanging();
			entity.HANGVE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHACHHANG;
		
		private string _TENKHACHHANG;
		
		private string _CMND;
		
		private string _SDT;
		
		private EntitySet<VECHUYENBAY> _VECHUYENBAYs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHACHHANGChanging(string value);
    partial void OnMAKHACHHANGChanged();
    partial void OnTENKHACHHANGChanging(string value);
    partial void OnTENKHACHHANGChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._VECHUYENBAYs = new EntitySet<VECHUYENBAY>(new Action<VECHUYENBAY>(this.attach_VECHUYENBAYs), new Action<VECHUYENBAY>(this.detach_VECHUYENBAYs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHACHHANG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHACHHANG
		{
			get
			{
				return this._MAKHACHHANG;
			}
			set
			{
				if ((this._MAKHACHHANG != value))
				{
					this.OnMAKHACHHANGChanging(value);
					this.SendPropertyChanging();
					this._MAKHACHHANG = value;
					this.SendPropertyChanged("MAKHACHHANG");
					this.OnMAKHACHHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHACHHANG", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENKHACHHANG
		{
			get
			{
				return this._TENKHACHHANG;
			}
			set
			{
				if ((this._TENKHACHHANG != value))
				{
					this.OnTENKHACHHANGChanging(value);
					this.SendPropertyChanging();
					this._TENKHACHHANG = value;
					this.SendPropertyChanged("TENKHACHHANG");
					this.OnTENKHACHHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_VECHUYENBAY", Storage="_VECHUYENBAYs", ThisKey="MAKHACHHANG", OtherKey="MAKHACHHANG")]
		public EntitySet<VECHUYENBAY> VECHUYENBAYs
		{
			get
			{
				return this._VECHUYENBAYs;
			}
			set
			{
				this._VECHUYENBAYs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VECHUYENBAYs(VECHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_VECHUYENBAYs(VECHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAYBAY")]
	public partial class MAYBAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMAYBAY;
		
		private string _TENMAYBAY;
		
		private int _SOLUONGGHE;
		
		private EntitySet<CHUYENBAY> _CHUYENBAYs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMAYBAYChanging(string value);
    partial void OnMAMAYBAYChanged();
    partial void OnTENMAYBAYChanging(string value);
    partial void OnTENMAYBAYChanged();
    partial void OnSOLUONGGHEChanging(int value);
    partial void OnSOLUONGGHEChanged();
    #endregion
		
		public MAYBAY()
		{
			this._CHUYENBAYs = new EntitySet<CHUYENBAY>(new Action<CHUYENBAY>(this.attach_CHUYENBAYs), new Action<CHUYENBAY>(this.detach_CHUYENBAYs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMAYBAY", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMAYBAY
		{
			get
			{
				return this._MAMAYBAY;
			}
			set
			{
				if ((this._MAMAYBAY != value))
				{
					this.OnMAMAYBAYChanging(value);
					this.SendPropertyChanging();
					this._MAMAYBAY = value;
					this.SendPropertyChanged("MAMAYBAY");
					this.OnMAMAYBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMAYBAY", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENMAYBAY
		{
			get
			{
				return this._TENMAYBAY;
			}
			set
			{
				if ((this._TENMAYBAY != value))
				{
					this.OnTENMAYBAYChanging(value);
					this.SendPropertyChanging();
					this._TENMAYBAY = value;
					this.SendPropertyChanged("TENMAYBAY");
					this.OnTENMAYBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGGHE", DbType="Int NOT NULL")]
		public int SOLUONGGHE
		{
			get
			{
				return this._SOLUONGGHE;
			}
			set
			{
				if ((this._SOLUONGGHE != value))
				{
					this.OnSOLUONGGHEChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGGHE = value;
					this.SendPropertyChanged("SOLUONGGHE");
					this.OnSOLUONGGHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAYBAY_CHUYENBAY", Storage="_CHUYENBAYs", ThisKey="MAMAYBAY", OtherKey="MAMAYBAY")]
		public EntitySet<CHUYENBAY> CHUYENBAYs
		{
			get
			{
				return this._CHUYENBAYs;
			}
			set
			{
				this._CHUYENBAYs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHUYENBAYs(CHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.MAYBAY = this;
		}
		
		private void detach_CHUYENBAYs(CHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.MAYBAY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANHANVIEN;
		
		private string _TENNHANVIEN;
		
		private EntitySet<ACCOUNT> _ACCOUNTs;
		
		private EntitySet<VECHUYENBAY> _VECHUYENBAYs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANHANVIENChanging(string value);
    partial void OnMANHANVIENChanged();
    partial void OnTENNHANVIENChanging(string value);
    partial void OnTENNHANVIENChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._ACCOUNTs = new EntitySet<ACCOUNT>(new Action<ACCOUNT>(this.attach_ACCOUNTs), new Action<ACCOUNT>(this.detach_ACCOUNTs));
			this._VECHUYENBAYs = new EntitySet<VECHUYENBAY>(new Action<VECHUYENBAY>(this.attach_VECHUYENBAYs), new Action<VECHUYENBAY>(this.detach_VECHUYENBAYs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNHANVIEN", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENNHANVIEN
		{
			get
			{
				return this._TENNHANVIEN;
			}
			set
			{
				if ((this._TENNHANVIEN != value))
				{
					this.OnTENNHANVIENChanging(value);
					this.SendPropertyChanging();
					this._TENNHANVIEN = value;
					this.SendPropertyChanged("TENNHANVIEN");
					this.OnTENNHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_ACCOUNT", Storage="_ACCOUNTs", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN")]
		public EntitySet<ACCOUNT> ACCOUNTs
		{
			get
			{
				return this._ACCOUNTs;
			}
			set
			{
				this._ACCOUNTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_VECHUYENBAY", Storage="_VECHUYENBAYs", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN")]
		public EntitySet<VECHUYENBAY> VECHUYENBAYs
		{
			get
			{
				return this._VECHUYENBAYs;
			}
			set
			{
				this._VECHUYENBAYs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACCOUNTs(ACCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_ACCOUNTs(ACCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_VECHUYENBAYs(VECHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_VECHUYENBAYs(VECHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANBAY")]
	public partial class SANBAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASANBAY;
		
		private string _TENSANBAY;
		
		private string _TENTHANHPHO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASANBAYChanging(string value);
    partial void OnMASANBAYChanged();
    partial void OnTENSANBAYChanging(string value);
    partial void OnTENSANBAYChanged();
    partial void OnTENTHANHPHOChanging(string value);
    partial void OnTENTHANHPHOChanged();
    #endregion
		
		public SANBAY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASANBAY", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASANBAY
		{
			get
			{
				return this._MASANBAY;
			}
			set
			{
				if ((this._MASANBAY != value))
				{
					this.OnMASANBAYChanging(value);
					this.SendPropertyChanging();
					this._MASANBAY = value;
					this.SendPropertyChanged("MASANBAY");
					this.OnMASANBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSANBAY", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENSANBAY
		{
			get
			{
				return this._TENSANBAY;
			}
			set
			{
				if ((this._TENSANBAY != value))
				{
					this.OnTENSANBAYChanging(value);
					this.SendPropertyChanging();
					this._TENSANBAY = value;
					this.SendPropertyChanged("TENSANBAY");
					this.OnTENSANBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTHANHPHO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENTHANHPHO
		{
			get
			{
				return this._TENTHANHPHO;
			}
			set
			{
				if ((this._TENTHANHPHO != value))
				{
					this.OnTENTHANHPHOChanging(value);
					this.SendPropertyChanging();
					this._TENTHANHPHO = value;
					this.SendPropertyChanged("TENTHANHPHO");
					this.OnTENTHANHPHOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THAMSO")]
	public partial class THAMSO
	{
		
		private System.Nullable<double> _THOIGIANBAYTOITHIEU;
		
		private System.Nullable<int> _SOSANBAYTGTOIDA;
		
		private System.Nullable<double> _THOIGIANDUNGTOITHIEU;
		
		private System.Nullable<double> _THOIGIANDUNGTOIDA;
		
		private System.Nullable<int> _TGCHAMNHATDATVE;
		
		private System.Nullable<int> _TGCHAMNHATHUYDATVE;
		
		public THAMSO()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANBAYTOITHIEU", DbType="Float")]
		public System.Nullable<double> THOIGIANBAYTOITHIEU
		{
			get
			{
				return this._THOIGIANBAYTOITHIEU;
			}
			set
			{
				if ((this._THOIGIANBAYTOITHIEU != value))
				{
					this._THOIGIANBAYTOITHIEU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOSANBAYTGTOIDA", DbType="Int")]
		public System.Nullable<int> SOSANBAYTGTOIDA
		{
			get
			{
				return this._SOSANBAYTGTOIDA;
			}
			set
			{
				if ((this._SOSANBAYTGTOIDA != value))
				{
					this._SOSANBAYTGTOIDA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANDUNGTOITHIEU", DbType="Float")]
		public System.Nullable<double> THOIGIANDUNGTOITHIEU
		{
			get
			{
				return this._THOIGIANDUNGTOITHIEU;
			}
			set
			{
				if ((this._THOIGIANDUNGTOITHIEU != value))
				{
					this._THOIGIANDUNGTOITHIEU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANDUNGTOIDA", DbType="Float")]
		public System.Nullable<double> THOIGIANDUNGTOIDA
		{
			get
			{
				return this._THOIGIANDUNGTOIDA;
			}
			set
			{
				if ((this._THOIGIANDUNGTOIDA != value))
				{
					this._THOIGIANDUNGTOIDA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGCHAMNHATDATVE", DbType="Int")]
		public System.Nullable<int> TGCHAMNHATDATVE
		{
			get
			{
				return this._TGCHAMNHATDATVE;
			}
			set
			{
				if ((this._TGCHAMNHATDATVE != value))
				{
					this._TGCHAMNHATDATVE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGCHAMNHATHUYDATVE", DbType="Int")]
		public System.Nullable<int> TGCHAMNHATHUYDATVE
		{
			get
			{
				return this._TGCHAMNHATHUYDATVE;
			}
			set
			{
				if ((this._TGCHAMNHATHUYDATVE != value))
				{
					this._TGCHAMNHATHUYDATVE = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINHTRANGVE")]
	public partial class TINHTRANGVE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACHUYENBAY;
		
		private string _MAHANGVE;
		
		private int _TONGSOGHE;
		
		private int _SOGHETRONG;
		
		private string _SODOGHE;
		
		private EntityRef<CHUYENBAY> _CHUYENBAY;
		
		private EntityRef<HANGVE> _HANGVE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACHUYENBAYChanging(string value);
    partial void OnMACHUYENBAYChanged();
    partial void OnMAHANGVEChanging(string value);
    partial void OnMAHANGVEChanged();
    partial void OnTONGSOGHEChanging(int value);
    partial void OnTONGSOGHEChanged();
    partial void OnSOGHETRONGChanging(int value);
    partial void OnSOGHETRONGChanged();
    partial void OnSODOGHEChanging(string value);
    partial void OnSODOGHEChanged();
    #endregion
		
		public TINHTRANGVE()
		{
			this._CHUYENBAY = default(EntityRef<CHUYENBAY>);
			this._HANGVE = default(EntityRef<HANGVE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUYENBAY", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACHUYENBAY
		{
			get
			{
				return this._MACHUYENBAY;
			}
			set
			{
				if ((this._MACHUYENBAY != value))
				{
					if (this._CHUYENBAY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACHUYENBAYChanging(value);
					this.SendPropertyChanging();
					this._MACHUYENBAY = value;
					this.SendPropertyChanged("MACHUYENBAY");
					this.OnMACHUYENBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANGVE", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHANGVE
		{
			get
			{
				return this._MAHANGVE;
			}
			set
			{
				if ((this._MAHANGVE != value))
				{
					if (this._HANGVE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHANGVEChanging(value);
					this.SendPropertyChanging();
					this._MAHANGVE = value;
					this.SendPropertyChanged("MAHANGVE");
					this.OnMAHANGVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGSOGHE", DbType="Int NOT NULL")]
		public int TONGSOGHE
		{
			get
			{
				return this._TONGSOGHE;
			}
			set
			{
				if ((this._TONGSOGHE != value))
				{
					this.OnTONGSOGHEChanging(value);
					this.SendPropertyChanging();
					this._TONGSOGHE = value;
					this.SendPropertyChanged("TONGSOGHE");
					this.OnTONGSOGHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOGHETRONG", DbType="Int NOT NULL")]
		public int SOGHETRONG
		{
			get
			{
				return this._SOGHETRONG;
			}
			set
			{
				if ((this._SOGHETRONG != value))
				{
					this.OnSOGHETRONGChanging(value);
					this.SendPropertyChanging();
					this._SOGHETRONG = value;
					this.SendPropertyChanged("SOGHETRONG");
					this.OnSOGHETRONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODOGHE", DbType="VarChar(100)")]
		public string SODOGHE
		{
			get
			{
				return this._SODOGHE;
			}
			set
			{
				if ((this._SODOGHE != value))
				{
					this.OnSODOGHEChanging(value);
					this.SendPropertyChanging();
					this._SODOGHE = value;
					this.SendPropertyChanged("SODOGHE");
					this.OnSODOGHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUYENBAY_TINHTRANGVE", Storage="_CHUYENBAY", ThisKey="MACHUYENBAY", OtherKey="MACHUYENBAY", IsForeignKey=true)]
		public CHUYENBAY CHUYENBAY
		{
			get
			{
				return this._CHUYENBAY.Entity;
			}
			set
			{
				CHUYENBAY previousValue = this._CHUYENBAY.Entity;
				if (((previousValue != value) 
							|| (this._CHUYENBAY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUYENBAY.Entity = null;
						previousValue.TINHTRANGVEs.Remove(this);
					}
					this._CHUYENBAY.Entity = value;
					if ((value != null))
					{
						value.TINHTRANGVEs.Add(this);
						this._MACHUYENBAY = value.MACHUYENBAY;
					}
					else
					{
						this._MACHUYENBAY = default(string);
					}
					this.SendPropertyChanged("CHUYENBAY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGVE_TINHTRANGVE", Storage="_HANGVE", ThisKey="MAHANGVE", OtherKey="MAHANGVE", IsForeignKey=true)]
		public HANGVE HANGVE
		{
			get
			{
				return this._HANGVE.Entity;
			}
			set
			{
				HANGVE previousValue = this._HANGVE.Entity;
				if (((previousValue != value) 
							|| (this._HANGVE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGVE.Entity = null;
						previousValue.TINHTRANGVEs.Remove(this);
					}
					this._HANGVE.Entity = value;
					if ((value != null))
					{
						value.TINHTRANGVEs.Add(this);
						this._MAHANGVE = value.MAHANGVE;
					}
					else
					{
						this._MAHANGVE = default(string);
					}
					this.SendPropertyChanged("HANGVE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TUYENBAY")]
	public partial class TUYENBAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATUYENBAY;
		
		private string _MASANBAYDI;
		
		private string _MASANBAYDEN;
		
		private EntitySet<CHUYENBAY> _CHUYENBAYs;
		
		private EntitySet<DONGIA> _DONGIAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATUYENBAYChanging(string value);
    partial void OnMATUYENBAYChanged();
    partial void OnMASANBAYDIChanging(string value);
    partial void OnMASANBAYDIChanged();
    partial void OnMASANBAYDENChanging(string value);
    partial void OnMASANBAYDENChanged();
    #endregion
		
		public TUYENBAY()
		{
			this._CHUYENBAYs = new EntitySet<CHUYENBAY>(new Action<CHUYENBAY>(this.attach_CHUYENBAYs), new Action<CHUYENBAY>(this.detach_CHUYENBAYs));
			this._DONGIAs = new EntitySet<DONGIA>(new Action<DONGIA>(this.attach_DONGIAs), new Action<DONGIA>(this.detach_DONGIAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATUYENBAY", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATUYENBAY
		{
			get
			{
				return this._MATUYENBAY;
			}
			set
			{
				if ((this._MATUYENBAY != value))
				{
					this.OnMATUYENBAYChanging(value);
					this.SendPropertyChanging();
					this._MATUYENBAY = value;
					this.SendPropertyChanged("MATUYENBAY");
					this.OnMATUYENBAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASANBAYDI", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MASANBAYDI
		{
			get
			{
				return this._MASANBAYDI;
			}
			set
			{
				if ((this._MASANBAYDI != value))
				{
					this.OnMASANBAYDIChanging(value);
					this.SendPropertyChanging();
					this._MASANBAYDI = value;
					this.SendPropertyChanged("MASANBAYDI");
					this.OnMASANBAYDIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASANBAYDEN", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MASANBAYDEN
		{
			get
			{
				return this._MASANBAYDEN;
			}
			set
			{
				if ((this._MASANBAYDEN != value))
				{
					this.OnMASANBAYDENChanging(value);
					this.SendPropertyChanging();
					this._MASANBAYDEN = value;
					this.SendPropertyChanged("MASANBAYDEN");
					this.OnMASANBAYDENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TUYENBAY_CHUYENBAY", Storage="_CHUYENBAYs", ThisKey="MATUYENBAY", OtherKey="MATUYENBAY")]
		public EntitySet<CHUYENBAY> CHUYENBAYs
		{
			get
			{
				return this._CHUYENBAYs;
			}
			set
			{
				this._CHUYENBAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TUYENBAY_DONGIA", Storage="_DONGIAs", ThisKey="MATUYENBAY", OtherKey="MATUYENBAY")]
		public EntitySet<DONGIA> DONGIAs
		{
			get
			{
				return this._DONGIAs;
			}
			set
			{
				this._DONGIAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHUYENBAYs(CHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.TUYENBAY = this;
		}
		
		private void detach_CHUYENBAYs(CHUYENBAY entity)
		{
			this.SendPropertyChanging();
			entity.TUYENBAY = null;
		}
		
		private void attach_DONGIAs(DONGIA entity)
		{
			this.SendPropertyChanging();
			entity.TUYENBAY = this;
		}
		
		private void detach_DONGIAs(DONGIA entity)
		{
			this.SendPropertyChanging();
			entity.TUYENBAY = null;
		}
	}
}
#pragma warning restore 1591
